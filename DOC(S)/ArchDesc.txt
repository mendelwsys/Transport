собственно генератор генерирует прокси класс, класс скелетона и вспомогательные 
классы представляющие переменные и интерфейсы.

Вызов происходит сл. образом

Классу прокси при инициализации скармливается класс реализующи интрфейс вызова 
IInvoker, в терминах которого он и предоствляет интересующий клиента интерфейс

Интерфейс IInvoker, реализован классом ClientConnector
Реализация ClientConnector зависит от канала который используется для 
передачи данных.

Симметричные ClientConnector классу классы 
ServerConnector.java ServerListener.java реализуют в терминах канала 
передачи приемную сторону серсивиса, так при инициализации класса
ServerConnector ему передается класс маршрутизатора (router), который 
в свою очередь обеспечивает доставку сообщений склетонам которые и предостваляют данный 
сервис. Склетоны реализуют интерфейс  IInvoker, этот интерфейс может 
вызываться объектом способным принимать сообщения и распознавать, что сообщения 
предназначены данному объекту реализующему сервис.

Концепция связи черезвычайно проста.

На хосте в пределах одного процесса создается множество сервисов.
имеется так же маршрутизатор с одной точкой входа, для TCP/IP точка 
входа IP_ADDRES/PORT

подчеркну, что кодогенератор ничего не знает о каналах передачи, точек входа
и пр. он лишь генерирует часть кода следующего определенному интерфейсу.
Этот интерфейс в свою очередь интегрируется в канальный уровень, в которй 
входят коннекторы и маршрутезаторы.


Мультиплексер:

Мультиплексер позволяет на одном физическом соединении создавать несколько
виртуальных каналов. Необходимость в этом возникает когда сервер не может 
предоставить сервис клиенту, по прямому обращению к клиента к серверу.

Ситуация эта возникает например, когда клиент связывается c 
сервером и сервер управляет каким нибудь объектом реализованным на клиенте.

В случая реализации скелетона на клиенте необходимо как-то связываться 
с сервисом предоставляемым клиентом. Ситуация еще более усугубляется когда транспортом
является HTTP(S), и клиент и/или сервер находится за фареволом.

При этом нет необходимости заморачиваться на тунелирование, 
которое еще не всегда работает, может быть запрещено на прокси и пр.

(РАЗОБРАТЬСЯ С HTTP тунелями?)
(КАК работает технология через прокси сервера?)

Сам мультиплексер позволяет упралять виртуальными каналами на основе 
одного физического канала, осуществляет маршрутизацию сообщений 
по каналам.
И вирутальные и физический канал наследуют один итерфейс ILgChannel.java,
однако реализация конечно разная, реализация физического канала
находится в su.org.coder.multiplexer.protocols на сегодняшний день (110305)
два протокола (sockstream и HTTP), обратим внимание, что на HTTP реализован
полный дуплекс, приемная сторона - сервлеты.


?!!!!КСТАТИ при написании приложений cgi-bin, насколько возможно использование 
данной технологии!!!!?
