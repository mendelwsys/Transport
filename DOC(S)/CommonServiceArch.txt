290505

Весь набор сервисов предоставляемых клиентам хранится в т.н. 
Service Storage (интерфейс IStorage).

Регистрация сервисов осуществляется либо во время первого обращения 
к сервису (например первым вызовом клиентом инициализационной JSP 
или сервлетом во время его загрузки) или может быть зарегистрирован
в произвольный момент времени поставляемым внешними библиотеками кодом.
(Например можно представить себе АРМ администратора который регистрирует 
сервисы в хранилище, однако отметим что бы получить доступ к сервису 
через канала JSP и Servlet на сегодняшний день необходим 
инициализационный сервлет, однако конечно очень просто сделать единую точку 
входа в которыю передавать имя сервиса в качестве параметра).

I	Сценарий обращения через канала HTTP (Servlet или JSP)

1. Производится вызов инициализационного сервлета или JSP

		При загрузке через сервлет

	1.1 Производится вызов имплементации абстрактного метода в котором 
производится регистрация сервиса обслуживания канала (если сервис еще 
не зарегистрирован)
	1.2 Производится инициализация сервиса
        	Функция сервиса
	1.3 Запрос нового канала у манагера каналов 
	
	1.4 Запуск на обслуживание канала по его идентификатору

	1.5 Возвратить идентификатор вызывающей стороне

		При запуске через JSP

	1.1 Получить интерфейс реализации сервиса
(для этого реализована фабрика сервисов которая исполняет роль загрузчика 
сервлетов, обеспечивая инициализацию сервиса в той же последовательности что 
инициализация сервлетов)
	1.2 Запрос нового канала у манагера каналов 
	
	1.3 Запуск на обслуживание канала по его идентификатору

	1.4 Возвратить идентификатор вызывающей стороне


2. Клиент обращается за данными по HTTP к специализированному сервлету или JSP
	2.1 Передается идентификатор канала
	по этому идентификатору в сервлете или JSP возвращается канал
	2.2. Из канала берутся данные и отправляются клиенту до тех пор пока
	либо истечет таймаут, либо из канала получено сообщение окончания соединения.

3. Клиент обращается для передачи данных к специлизированному сервлету или JSP
	Данные клиентом передаются пакетом за одно обращение, после 
	этого клиент закрывает соединение, для нового обращения производится 
	повторное соединение (сейчас сделано так из-за возможностей хостинга).

	Как в пункте 2, в сервлете или JSP производится прием 
идентификатора канала по которому получается канала и в этот канала 
записывается пакет данных. 

II	Сценарий обращения через канал Сокета

	1. На определенном порте висит сервис (вешается при загрузки сервера
с помощью класса SocketListener)
	2. При приходе запроса на обслуживание создается поток обслуживания 
этого сокета
	3. Из сокета обслуживания клиента получаются данные, которые содержат имя 
сервиса 
	4. По полученному имени получить интерфейс сервиса
	5. Создать потоковый канал (простая имплементация интерфейса ILgChannel
в терминах потоков ввода/вывода сокета) и передать его сервису на обслуживание.


После этого обмен между клиентом и сервисом осуществлятся через имплементацию
ILgChannel в терминах сокета.


III		Каналы

Каналы о которых шла речь выше будем называть системными каналами. Над системным 
каналом может строится множество виртуальных каналов, информация из которых 
мультеплексируется в системный канал. Собственно мультеплексор и осуществляет 
эту функциональность, понятно, что системный канал должен следовать интерфейсу
ILgChannel, для того что бы на нем организовать мультиплексирование, 
теоретическси можно вирутальный канал использовать как системный организовав 
двойное мультиплексирование (практически я не пробывал потому что не понятно зачем
:-)

	1. Системный канал сервлета и JSP

Данные передаваемые сервлетам и получаемые от сервлета берутся из  т.н. канала
сервлета. Серверная программа выполняющая бизнес логику так же получает данные 
из своего канала. Соединение этих каналов осуществляет классом ServletChannel, 
который представляет из себя своеобразный четырех полюсник, одна сторона 
которого принадлежит сервлетам, другая программе бизнес логики.

Операция размещения этого четырех полюсника производится в коде 
инициализационного сервлета или JSP с помощью фабрики каналов 
ServletChannelManager и там же производится и запуск потока 
обслуживающего бизнес логику канала (т.е. запуск программы собственно 
которой предназначены данные от клиента)
	
	2. Системный канал сокетного соединения

Системный канал сокетного соединения в отличии от канала сервлета и JSP не 
генерируется фабрикой каналов, просто производится инстанцирование реализации 
канала на базе сокетов полученых в результате запроса на соединение по TCP/IP.
Здесь нет необходимости в организации всяких "четырехполюсников" поскольку 
в распоряжении программы бизнес логики имеются онлайновые потоки ввода/вывода.

